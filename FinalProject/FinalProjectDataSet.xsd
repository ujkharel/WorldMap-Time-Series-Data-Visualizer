<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FinalProjectDataSet" targetNamespace="http://tempuri.org/FinalProjectDataSet.xsd" xmlns:mstns="http://tempuri.org/FinalProjectDataSet.xsd" xmlns="http://tempuri.org/FinalProjectDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="FinalProjectConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="FinalProjectConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FinalProject.Properties.Settings.GlobalReference.Default.FinalProjectConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CountryInfoTableAdapter" GeneratorDataComponentClassName="CountryInfoTableAdapter" Name="CountryInfo" UserDataComponentName="CountryInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByRegion" GetMethodModifier="Public" GetMethodName="GetDataByRegion" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByRegion" UserSourceName="GetDataByRegion">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        CountryInfo.CountryName, GDPPerCapita.y1980 AS GDPPerCapita, LifeExpectancy.y1980 AS LifeExpectancy, CountryInfo.Latitude, CountryInfo.Longitude, CountryInfo.Redi, CountryInfo.Greeni, CountryInfo.Blue
FROM            GDPPerCapita FULL OUTER JOIN
                         CountryInfo ON GDPPerCapita.CountryCode = CountryInfo.CountryCode
FULL OUTER JOIN LifeExpectancy ON
                         GDPPerCapita.CountryCode = LifeExpectancy.CountryCode
WHERE        (CountryInfo.Region = @Region)
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Region" ColumnName="Region" DataSourceName="FinalProject.dbo.CountryInfo" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Region" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Region" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CountryName" DataSetColumn="CountryName" />
              <Mapping SourceColumn="GDPPerCapita" DataSetColumn="GDPPerCapita1" />
              <Mapping SourceColumn="LifeExpectancy" DataSetColumn="LifeExpectancy" />
              <Mapping SourceColumn="Latitude" DataSetColumn="Latitude" />
              <Mapping SourceColumn="Longitude" DataSetColumn="Longitude" />
              <Mapping SourceColumn="Redi" DataSetColumn="Redi" />
              <Mapping SourceColumn="Greeni" DataSetColumn="Greeni" />
              <Mapping SourceColumn="Blue" DataSetColumn="Blue" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectName="FinalProject.dbo.CountryData" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetAllInRegion" GetMethodModifier="Public" GetMethodName="GetAllInRegion" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetAllInRegion" UserSourceName="GetAllInRegion">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT CountryData.Value
FROM            CountryData FULL OUTER JOIN
                         CountryInfo ON CountryData.CountryCode = CountryInfo.CountryCode
WHERE        (CountryInfo.Region LIKE @Region) AND (CountryData.Value IS NOT NULL) AND (CountryData.Variable = @Variable)
ORDER BY CountryData.Value
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Region" ColumnName="Region" DataSourceName="FinalProject.dbo.CountryInfo" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Region" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Variable" ColumnName="Variable" DataSourceName="FinalProject.dbo.CountryData" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Variable" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Variable" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy" GetMethodModifier="Public" GetMethodName="GetDataBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetDataBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT        CountryInfo.CountryName, CountryData.Value, CountryInfo.Latitude, CountryInfo.Longitude, CountryInfo.Redi, CountryInfo.Greeni, CountryInfo.Blue
FROM            CountryData FULL OUTER JOIN
                         CountryInfo ON CountryData.CountryCode = CountryInfo.CountryCode
WHERE        (CountryInfo.Region like @Region) AND (CountryData.Value IS NOT NULL) AND (CountryData.Variable = @Variable) AND (CountryData.Year = @Year)
Order By CountryData.Value desc</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Region" ColumnName="Region" DataSourceName="" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Region" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Variable" ColumnName="Variable" DataSourceName="" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Variable" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Variable" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Year" ColumnName="Year" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectName="FinalProject.dbo.CountryInfo" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetDisRegionBy" GetMethodModifier="Public" GetMethodName="GetDisRegionBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDisRegionBy" UserSourceName="GetDisRegionBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Region
FROM            CountryInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectName="FinalProject.dbo.CountryInfo" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetMissingData" GetMethodModifier="Public" GetMethodName="GetMissingData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetMissingData" UserSourceName="GetMissingData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        CountryInfo.CountryName, CountryInfo.Latitude, CountryInfo.Longitude, CountryInfo.Redi, CountryInfo.Greeni, CountryInfo.Blue
FROM            CountryData FULL OUTER JOIN
                         CountryInfo ON CountryData.CountryCode = CountryInfo.CountryCode
WHERE        (CountryInfo.Region LIKE @Region) AND (CountryData.Value IS NULL) AND (CountryData.Variable = @Variable) AND (CountryData.Year = @Year)
Order By CountryName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Region" ColumnName="Region" DataSourceName="FinalProject.dbo.CountryInfo" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Region" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Variable" ColumnName="Variable" DataSourceName="FinalProject.dbo.CountryData" DataTypeServer="varchar(255)" DbType="AnsiString" Direction="Input" ParameterName="@Variable" Precision="0" ProviderType="VarChar" Scale="0" Size="255" SourceColumn="Variable" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Year" ColumnName="Year" DataSourceName="FinalProject.dbo.CountryData" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectName="FinalProject.dbo.CountryData" DbObjectType="Table" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetVarList" GetMethodModifier="Public" GetMethodName="GetVarList" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetVarList" UserSourceName="GetVarList">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT Variable
FROM            CountryData
ORDER BY Variable</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CountryDataTableAdapter" GeneratorDataComponentClassName="CountryDataTableAdapter" Name="CountryData" UserDataComponentName="CountryDataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="FinalProjectConnectionString (Settings)" DbObjectName="FinalProject.dbo.CountryData" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CountryData] ([CountryCode], [Variable], [Year], [Value]) VALUES (@CountryCode, @Variable, @Year, @Value)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CountryCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CountryCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Variable" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Variable" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Year" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Year" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CountryCode, Variable, Year, Value FROM dbo.CountryData</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CountryCode" DataSetColumn="CountryCode" />
              <Mapping SourceColumn="Variable" DataSetColumn="Variable" />
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Value" DataSetColumn="Value" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FinalProjectDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FinalProjectDataSet" msprop:Generator_UserDSName="FinalProjectDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CountryInfo" msprop:Generator_TableClassName="CountryInfoDataTable" msprop:Generator_TableVarName="tableCountryInfo" msprop:Generator_RowChangedName="CountryInfoRowChanged" msprop:Generator_TablePropName="CountryInfo" msprop:Generator_RowDeletingName="CountryInfoRowDeleting" msprop:Generator_RowChangingName="CountryInfoRowChanging" msprop:Generator_RowEvHandlerName="CountryInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="CountryInfoRowDeleted" msprop:Generator_RowClassName="CountryInfoRow" msprop:Generator_UserTableName="CountryInfo" msprop:Generator_RowEvArgName="CountryInfoRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CountryName" msprop:Generator_ColumnVarNameInTable="columnCountryName" msprop:Generator_ColumnPropNameInRow="CountryName" msprop:Generator_ColumnPropNameInTable="CountryNameColumn" msprop:Generator_UserColumnName="CountryName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GDPPerCapita" msprop:Generator_ColumnVarNameInTable="columnGDPPerCapita" msprop:Generator_ColumnPropNameInRow="GDPPerCapita" msprop:Generator_ColumnPropNameInTable="GDPPerCapitaColumn" msprop:Generator_UserColumnName="GDPPerCapita" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GDPPerCapita1" msdata:Caption="GDPPerCapita" msprop:Generator_ColumnVarNameInTable="columnGDPPerCapita1" msprop:Generator_ColumnPropNameInRow="GDPPerCapita1" msprop:Generator_ColumnPropNameInTable="GDPPerCapita1Column" msprop:Generator_UserColumnName="GDPPerCapita1" type="xs:decimal" minOccurs="0" />
              <xs:element name="LifeExpectancy" msprop:Generator_ColumnVarNameInTable="columnLifeExpectancy" msprop:Generator_ColumnPropNameInRow="LifeExpectancy" msprop:Generator_ColumnPropNameInTable="LifeExpectancyColumn" msprop:Generator_UserColumnName="LifeExpectancy" type="xs:float" minOccurs="0" />
              <xs:element name="Latitude" msprop:Generator_ColumnVarNameInTable="columnLatitude" msprop:Generator_ColumnPropNameInRow="Latitude" msprop:Generator_ColumnPropNameInTable="LatitudeColumn" msprop:Generator_UserColumnName="Latitude" type="xs:float" minOccurs="0" />
              <xs:element name="Longitude" msprop:Generator_ColumnVarNameInTable="columnLongitude" msprop:Generator_ColumnPropNameInRow="Longitude" msprop:Generator_ColumnPropNameInTable="LongitudeColumn" msprop:Generator_UserColumnName="Longitude" type="xs:float" minOccurs="0" />
              <xs:element name="Redi" msprop:Generator_ColumnVarNameInTable="columnRedi" msprop:Generator_ColumnPropNameInRow="Redi" msprop:Generator_ColumnPropNameInTable="RediColumn" msprop:Generator_UserColumnName="Redi" type="xs:int" minOccurs="0" />
              <xs:element name="Greeni" msprop:Generator_ColumnVarNameInTable="columnGreeni" msprop:Generator_ColumnPropNameInRow="Greeni" msprop:Generator_ColumnPropNameInTable="GreeniColumn" msprop:Generator_UserColumnName="Greeni" type="xs:int" minOccurs="0" />
              <xs:element name="Blue" msprop:Generator_ColumnVarNameInTable="columnBlue" msprop:Generator_ColumnPropNameInRow="Blue" msprop:Generator_ColumnPropNameInTable="BlueColumn" msprop:Generator_UserColumnName="Blue" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CountryData" msprop:Generator_TableClassName="CountryDataDataTable" msprop:Generator_TableVarName="tableCountryData" msprop:Generator_TablePropName="CountryData" msprop:Generator_RowDeletingName="CountryDataRowDeleting" msprop:Generator_RowChangingName="CountryDataRowChanging" msprop:Generator_RowEvHandlerName="CountryDataRowChangeEventHandler" msprop:Generator_RowDeletedName="CountryDataRowDeleted" msprop:Generator_UserTableName="CountryData" msprop:Generator_RowChangedName="CountryDataRowChanged" msprop:Generator_RowEvArgName="CountryDataRowChangeEvent" msprop:Generator_RowClassName="CountryDataRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CountryCode" msprop:Generator_ColumnVarNameInTable="columnCountryCode" msprop:Generator_ColumnPropNameInRow="CountryCode" msprop:Generator_ColumnPropNameInTable="CountryCodeColumn" msprop:Generator_UserColumnName="CountryCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Variable" msprop:Generator_ColumnVarNameInTable="columnVariable" msprop:Generator_ColumnPropNameInRow="Variable" msprop:Generator_ColumnPropNameInTable="VariableColumn" msprop:Generator_UserColumnName="Variable" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Year" msprop:Generator_ColumnVarNameInTable="columnYear" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_UserColumnName="Year" type="xs:int" minOccurs="0" />
              <xs:element name="Value" msprop:Generator_ColumnVarNameInTable="columnValue" msprop:Generator_ColumnPropNameInRow="Value" msprop:Generator_ColumnPropNameInTable="ValueColumn" msprop:Generator_UserColumnName="Value" type="xs:float" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>